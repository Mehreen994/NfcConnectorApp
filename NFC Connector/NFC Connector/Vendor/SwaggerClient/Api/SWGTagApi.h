#import <Foundation/Foundation.h>
#import "SWGTag.h"
#import "SWGApi.h"
#import "SWGHistory.h"
#import "SWGPowerConsumption.h"

/**
* Auguris App Webservice
* A webservice for the glorious Auguris App
*
* OpenAPI spec version: 1.0.0
* Contact: rc@rassware.de
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGTagApi: NSObject <SWGApi>

extern NSString* kSWGTagApiErrorDomain;
extern NSInteger kSWGTagApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add a new Tag
/// Creates a new Tag in the database
///
/// @param body Tag object that needs to be added to the database
/// 
///  code:405 message:"Invalid input"
///
/// @return void
-(NSURLSessionTask*) tagCreatePostWithBody: (SWGTag*) body
    completionHandler: (void (^)(NSError* error)) handler;


///
/// gets Tag History Info
/// Returns the history of the Tag
///  @param tagId ID of the tag
///
///
///  @returns SWGTag*
///
-(NSURLSessionTask*) getTagHistoryWithTagId: (NSString*) tagId
                               completionHandler: (void (^)(SWGHistory* output, NSError* error)) handler;

/// Returns powerConsumption
/// Returns a powerConsumption object from the database
///
/// @param tagId ID of tag to get powerConsumption
///
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return SWGPowerConsumption*
-(NSURLSessionTask*) tagGetPowerConsumptionWithTagId: (NSString*) tagId
                                   completionHandler: (void (^)(SWGPowerConsumption* output, NSError* error)) handler;

/// Returns a Tag
/// Returns a Tag from the database
///
/// @param tagId ID of tag to return
/// @param lat user position latitude value
/// @param _long user position logitude value
/// 
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return SWGTag*
-(NSURLSessionTask*) tagGetTagIdGetWithTagId: (NSString*) tagId
                                     lat: (NSNumber*) lat
                                   _long: (NSNumber*) _long
                           completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;


/// Add a new sterilization
/// Adds a new sterilization to a Tag in the database
///
/// @param tagId Tag id to sterilize
/// @param lat Current latitude of tag
/// @param _long Current latitude of tag
/// 
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return SWGTag*
-(NSURLSessionTask*) tagSterilizationTagIdPostWithTagId: (NSString*) tagId
    lat: (NSNumber*) lat
    _long: (NSNumber*) _long
    completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;


/// Deletes a tag
/// 
///
/// @param tagId Tag id to delete
/// 
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return void
-(NSURLSessionTask*) tagUpdateTagIdDeleteWithTagId: (NSString*) tagId
    completionHandler: (void (^)(NSError* error)) handler;


/// Posts tag info
/// Returns tag location to DB
///
/// @param tagId ID of tag to return
/// @param lat Current latitude of tag
/// @param _long Current latitude of tag
/// 
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return SWGTag*
-(NSURLSessionTask*) tagUpdateTagIdPostWithTagId: (NSString*) tagId
    lat: (NSNumber*) lat
    _long: (NSNumber*) _long
    completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;

-(NSURLSessionTask*) updatePowerStatusWithTag: (SWGTag*) tag powerStatus: (NSString*) powerStatus
                            completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;

/// Add a new cycle
/// Adds a new cycle to a Tag in the database
///
/// @param tagId Tag id to (use) cycle up
/// @param lat Current latitude of tag
/// @param _long Current latitude of tag
/// 
///  code:200 message:"successful operation",
///  code:400 message:"Invalid ID supplied",
///  code:404 message:"Tag not found"
///
/// @return SWGTag*
-(NSURLSessionTask*) tagUsecycleTagIdPostWithTagId: (NSString*) tagId
    lat: (NSNumber*) lat
    _long: (NSNumber*) _long
    completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;

-(NSURLSessionTask*) createEventWithTag: (NSString*) tagId
                                    lat: (NSNumber*) lat
                                  _long: (NSNumber*) _long
                                 userId: (NSString*) userId
                              eventCode: (NSString*) eventCode
                      completionHandler: (void (^)(SWGTag* output, NSError* error)) handler;

@end
